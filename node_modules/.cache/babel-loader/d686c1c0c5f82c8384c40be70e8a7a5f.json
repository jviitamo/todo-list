{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jviit\\\\OneDrive\\\\Documents\\\\kouluprojektit\\\\todo-list\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jviit\\\\OneDrive\\\\Documents\\\\kouluprojektit\\\\todo-list\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport TodoList from \"./TodoList/TodoList.jsx\";\nimport Input from \"./AddInput/index\";\nimport arrayMove from \"array-move\";\nimport background from \"./\"; // Voit käyttää tätä listaa ykköstehtävässä.\n// eslint-disable-next-line\n\nconst exampleToDoList = [{\n  name: \"Renderöi lista\",\n  value: false\n}, {\n  name: \"Toteuta lisäyskomponentti\",\n  value: false\n}, {\n  name: \"Toteuta valmiiksi merkkaaminen\",\n  value: false\n}, {\n  name: \"Bonus: järjestettävä lista\",\n  value: false\n}];\nexport default function App() {\n  const _useState = useState(exampleToDoList),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        ToDo = _useState4[0],\n        setNewToDo = _useState4[1];\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    const newList = arrayMove(list, oldIndex, newIndex);\n    return setList(newList);\n  };\n\n  const addToList = e => {\n    e.preventDefault();\n    const names = list.map(todo => todo.name);\n\n    if (ToDo !== \"\") {\n      if (!names.includes(ToDo)) {\n        const newItem = {\n          name: ToDo,\n          value: false\n        };\n        setNewToDo(\"\");\n        return setList(list.concat(newItem));\n      }\n    }\n  };\n\n  const handleToDoChange = event => {\n    setNewToDo(event.target.value);\n  };\n\n  const markComplete = name => {\n    setList(list.map(todo => {\n      if (todo.name === name) {\n        todo.value = !todo.value;\n      }\n\n      return todo;\n    }));\n  }; // Tähän kannattaa tehdä kaikki funktiot, joilla listaa\n  // muokataan. Esim. listaan lisääminen, listasta poistaminen,\n  // listaelementin siirtäminen. Funktiot voi lähettää muille\n  // komponenteille propseina.\n  // Allaolevaan rakenteeseen lisätään komponentit listaelementille\n  // ja lisäyselementille.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundImage: \"url(\".concat(background, \")\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      marginTop: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"TO-DO LIST\"), /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    markComplete: markComplete,\n    onSortEnd: onSortEnd,\n    useDragHandle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    addToList: addToList,\n    ToDo: ToDo,\n    handleToDoChange: handleToDoChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/jviit/OneDrive/Documents/kouluprojektit/todo-list/src/App.js"],"names":["React","useState","TodoList","Input","arrayMove","background","exampleToDoList","name","value","App","list","setList","ToDo","setNewToDo","onSortEnd","oldIndex","newIndex","newList","addToList","e","preventDefault","names","map","todo","includes","newItem","concat","handleToDoChange","event","target","markComplete","backgroundImage","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport TodoList from \"./TodoList/TodoList.jsx\";\r\nimport Input from \"./AddInput/index\";\r\nimport arrayMove from \"array-move\";\r\nimport background from \"./\"\r\n\r\n// Voit käyttää tätä listaa ykköstehtävässä.\r\n// eslint-disable-next-line\r\nconst exampleToDoList = [\r\n  {\r\n    name: \"Renderöi lista\",\r\n    value: false\r\n  },\r\n  {\r\n    name: \"Toteuta lisäyskomponentti\",\r\n    value: false\r\n  },\r\n  {\r\n    name: \"Toteuta valmiiksi merkkaaminen\",\r\n    value: false\r\n  },\r\n  {\r\n    name: \"Bonus: järjestettävä lista\",\r\n    value: false\r\n  }\r\n];\r\n\r\nexport default function App() {\r\n  const [list, setList] = useState(exampleToDoList);\r\n  const [ToDo, setNewToDo] = useState(\"\");\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    const newList = arrayMove(list, oldIndex, newIndex);\r\n    return setList(newList);\r\n  };\r\n\r\n  const addToList = e => {\r\n    e.preventDefault();\r\n\r\n    const names = list.map(todo => todo.name);\r\n\r\n    if (ToDo !== \"\") {\r\n      if (!names.includes(ToDo)) {\r\n        const newItem = {\r\n          name: ToDo,\r\n          value: false\r\n        };\r\n        setNewToDo(\"\");\r\n        return setList(list.concat(newItem));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToDoChange = event => {\r\n    setNewToDo(event.target.value);\r\n  };\r\n\r\n  const markComplete = name => {\r\n    setList(\r\n      list.map(todo => {\r\n        if (todo.name === name) {\r\n          todo.value = !todo.value;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  // Tähän kannattaa tehdä kaikki funktiot, joilla listaa\r\n  // muokataan. Esim. listaan lisääminen, listasta poistaminen,\r\n  // listaelementin siirtäminen. Funktiot voi lähettää muille\r\n  // komponenteille propseina.\r\n\r\n  // Allaolevaan rakenteeseen lisätään komponentit listaelementille\r\n  // ja lisäyselementille.\r\n  return (\r\n    <div className=\"App\" style={ {backgroundImage: `url(${background})`} }>\r\n      <h1 style={{ marginTop: \"100px\" }}>TO-DO LIST</h1>\r\n      <TodoList\r\n        list={list}\r\n        markComplete={markComplete}\r\n        onSortEnd={onSortEnd}\r\n        useDragHandle\r\n      />\r\n      <Input\r\n        addToList={addToList}\r\n        ToDo={ToDo}\r\n        handleToDoChange={handleToDoChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}